import base64


def base64_decode(coded_string = None):
    """The example is a png file"""
    if coded_string is None:
        coded_string = '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'
        decoded_string = base64.b64decode(coded_string)
        with open('test.png','wb') as f:
            f.write(decoded_string)
        return decoded_string
    return base64.b64decode(coded_string)
    
    
if __name__ == '__main__':
    base64_decode()
